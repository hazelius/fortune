package main

import (
	"bytes"
	"io"
	"strings"
	"testing"
)

func Test_run(t *testing.T) {
	type args struct {
		stdin io.Reader
	}
	tests := []struct {
		name    string
		args    args
		wantOut string
	}{
		{name: "1", args: args{stdin: strings.NewReader(`3 5
		#.#..
		.....
		.#...
		2 2
		#.
		.#
		5 3
		...
		#.#
		.#.
		.#.
		...`)}, wantOut: `Yes`},
		{name: "2", args: args{stdin: strings.NewReader(`2 2
		#.
		.#
		2 2
		#.
		.#
		2 2
		##
		##`)}, wantOut: `No`},
		{name: "3", args: args{stdin: strings.NewReader(`1 1
		#
		1 2
		##
		1 1
		#`)}, wantOut: `No`},
		{name: "4", args: args{stdin: strings.NewReader(`3 3
		###
		...
		...
		3 3
		#..
		#..
		#..
		3 3
		..#
		..#
		###`)}, wantOut: `Yes`},
		{name: "random2-03", args: args{stdin: strings.NewReader(`8 6
		......
		..##..
		......
		..#...
		..##.#
		......
		......
		......
		8 7
		.......
		.......
		.......
		.......
		.....#.
		.....#.
		.......
		....#..
		6 9
		...###...
		.....#...
		...#..#..
		...##.#..
		.........
		.........`)}, wantOut: `No`},
		{name: "random2_07", args: args{stdin: strings.NewReader(`10 9
		......#..
		......#..
		.....##..
		.....#...
		.....#...
		.........
		......#..
		....##...
		....#....
		.........
		10 10
		..#.......
		..#.#.....
		....#.....
		..........
		..........
		..#.......
		..........
		..##......
		..........
		....#.....
		10 9
		...#.#...
		...#.#...
		....##...
		....#....
		....#....
		...#.....
		.....#...
		...###...
		...#.....
		.....#...`)}, wantOut: `No`},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			out := &bytes.Buffer{}
			run(tt.args.stdin, out)
			if gotOut := out.String(); gotOut != tt.wantOut {
				t.Errorf("run() = %v, want %v", gotOut, tt.wantOut)
			}
		})
	}
}
